syntax = "proto3";

service FlightService {
  rpc ListFlights(Criteria) returns (stream FlightInfo) {}
  rpc GetFlightInfo(FlightDescriptor) returns (FlightInfo) {}
  rpc GetSchema(FlightDescriptor) returns (SchemaResult) {}
  rpc DoGet(Ticket) returns (stream FlightData) {}
}


message Criteria {
  bytes expression = 1;
}


message Result {
  bytes body = 1;
}

message SchemaResult {
  bytes schema = 1;
}

message FlightDescriptor {
  enum DescriptorType {
    UNKNOWN = 0;
    PATH = 1;
    CMD = 2;
  }
  DescriptorType type = 1;
  bytes cmd = 2;
  repeated string path = 3;
}

message FlightInfo {
  bytes schema = 1;
  FlightDescriptor flight_descriptor = 2;
  repeated FlightEndpoint endpoint = 3;
  int64 total_records = 4;
  int64 total_bytes = 5;
}

message FlightEndpoint {
  Ticket ticket = 1;
  repeated Location location = 2;
}

message Location {
  string uri = 1;
}

message Ticket {
  bytes ticket = 1;
}

message FlightData {
  FlightDescriptor flight_descriptor = 1;
  bytes data_header = 2;
  bytes app_metadata = 3;
  bytes data_body = 1000;

}

message PutResult {
  bytes app_metadata = 1;
}